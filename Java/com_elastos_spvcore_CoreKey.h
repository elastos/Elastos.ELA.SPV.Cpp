/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_elastos_spvcore_CoreKey */

#ifndef _Included_com_elastos_spvcore_CoreKey
#define _Included_com_elastos_spvcore_CoreKey
#ifdef __cplusplus
extern "C" {
#endif
	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    getSecret
	 * Signature: ()[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_getSecret
		(JNIEnv *, jobject);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    getPubKey
	 * Signature: ()[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_getPubKey
		(JNIEnv *, jobject);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    getCompressed
	 * Signature: ()I
	 */
	JNIEXPORT jint JNICALL Java_com_elastos_spvcore_CoreKey_getCompressed
		(JNIEnv *, jobject);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    getPrivKey
	 * Signature: ()Ljava/lang/String;
	 */
	JNIEXPORT jstring JNICALL Java_com_elastos_spvcore_CoreKey_getPrivKey
		(JNIEnv *, jobject);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    getSeedFromPhrase
	 * Signature: ([B)[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_getSeedFromPhrase
		(JNIEnv *, jclass, jbyteArray);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    getAuthPrivKeyForAPI
	 * Signature: ([B)[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_getAuthPrivKeyForAPI
		(JNIEnv *, jclass, jbyteArray);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    getAuthPublicKeyForAPI
	 * Signature: ([B)Ljava/lang/String;
	 */
	JNIEXPORT jstring JNICALL Java_com_elastos_spvcore_CoreKey_getAuthPublicKeyForAPI
		(JNIEnv *, jclass, jbyteArray);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    decryptBip38Key
	 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	 */
	JNIEXPORT jstring JNICALL Java_com_elastos_spvcore_CoreKey_decryptBip38Key
		(JNIEnv *, jclass, jstring, jstring);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    createJniCoreKey
	 * Signature: ()J
	 */
	JNIEXPORT jlong JNICALL Java_com_elastos_spvcore_CoreKey_createJniCoreKey
		(JNIEnv *, jclass);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    createCoreKeyForBIP32
	 * Signature: ([BJJ)J
	 */
	JNIEXPORT jlong JNICALL Java_com_elastos_spvcore_CoreKey_createCoreKeyForBIP32
		(JNIEnv *, jclass, jbyteArray, jlong, jlong);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    setPrivKey
	 * Signature: (Ljava/lang/String;)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_elastos_spvcore_CoreKey_setPrivKey
		(JNIEnv *, jobject, jstring);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    setSecret
	 * Signature: ([BZ)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_elastos_spvcore_CoreKey_setSecret
		(JNIEnv *, jobject, jbyteArray, jboolean);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    compactSign
	 * Signature: ([B)[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_compactSign
		(JNIEnv *, jobject, jbyteArray);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    encryptNative
	 * Signature: ([B[B)[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_encryptNative
		(JNIEnv *, jobject, jbyteArray, jbyteArray);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    decryptNative
	 * Signature: ([B[B)[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_decryptNative
		(JNIEnv *, jobject, jbyteArray, jbyteArray);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    address
	 * Signature: ()Ljava/lang/String;
	 */
	JNIEXPORT jstring JNICALL Java_com_elastos_spvcore_CoreKey_address
		(JNIEnv *, jobject);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    isValidBitcoinPrivateKey
	 * Signature: (Ljava/lang/String;)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_elastos_spvcore_CoreKey_isValidBitcoinPrivateKey
		(JNIEnv *, jclass, jstring);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    isValidBitcoinBIP38Key
	 * Signature: (Ljava/lang/String;)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_elastos_spvcore_CoreKey_isValidBitcoinBIP38Key
		(JNIEnv *, jclass, jstring);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    encodeSHA256
	 * Signature: (Ljava/lang/String;)[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_encodeSHA256
		(JNIEnv *, jclass, jstring);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    sign
	 * Signature: ([B)[B
	 */
	JNIEXPORT jbyteArray JNICALL Java_com_elastos_spvcore_CoreKey_sign
		(JNIEnv *, jobject, jbyteArray);

	/*
	 * Class:     com_elastos_spvcore_CoreKey
	 * Method:    verify
	 * Signature: ([B[B)Z
	 */
	JNIEXPORT jboolean JNICALL Java_com_elastos_spvcore_CoreKey_verify
		(JNIEnv *, jobject, jbyteArray, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
